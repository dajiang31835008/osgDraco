SET(NIUBI_SETUP_TARGET_NAME SaveAndLoad)

SET(NIUBI_SETUP_HEADERS
)

SET(NIUBI_SETUP_SOURCES
    SaveAndLoad.cpp
)


INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/include/ )
# INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR})
# INCLUDE_DIRECTORIES(AFTER ${_3RDPARTY_INCLUDE_DIR})
INCLUDE_DIRECTORIES(AFTER ${OSG_INCLUDE_DIR})
# INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/extlib/TUIO11_CPP/TUIO)
# INCLUDE_DIRECTORIES(AFTER ${PROJECT_SOURCE_DIR}/extlib/TUIO11_CPP/oscpack)

# LINK_DIRECTORIES(${PROJECT_BINARY_DIR}/lib)
# IF(MALI_FOUND)
    # LINK_DIRECTORIES( ${MALI_LIBRARY_DIR})
# ENDIF()

# SET(NDK_LIB)
# IF( ANDROID )
    # SET(NDK_LIB ${NDK_LIB} android log native_app_glue EGL GLESv1_CM )
    # SET(NDK_LIB ${NDK_LIB} Launcher_ndk GraphicsContext_egl_ndk Renderer_gles_1_x)
# ENDIF( ANDROID )

# ADD_DEFINITIONS( -DDRACO_STANDARD_EDGEBREAKER_SUPPORTED
            # -DDRACO_PREDICTIVE_EDGEBREAKER_SUPPORTED )

NIUBI_SETUP_EXECUTABLE()
TARGET_LINK_LIBRARIES( ${NIUBI_SETUP_TARGET_NAME} 
    ${OPENGL_LIBRARIES}
    optimized ${OPENTHREADS_LIBRARY}    debug ${OPENTHREADS_LIBRARY_DEBUG}
    optimized ${OSG_LIBRARY}            debug ${OSG_LIBRARY_DEBUG} 
    optimized ${OSGDB_LIBRARY}          debug ${OSGDB_LIBRARY_DEBUG} 
    optimized ${OSGUTIL_LIBRARY}        debug ${OSGUTIL_LIBRARY_DEBUG}
    optimized ${OSGGA_LIBRARY}          debug ${OSGGA_LIBRARY_DEBUG} 
    optimized ${OSGVIEWER_LIBRARY}      debug ${OSGVIEWER_LIBRARY_DEBUG} 
    )
# NIUBI_SETUP_INSTALL()
# NIUBI_SETUP_DOCUMENT()




